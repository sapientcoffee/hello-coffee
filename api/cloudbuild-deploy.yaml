steps:
### The below block should probably be in another workflow that is triggered once a mainal approval/review step is
# Create Container Image
- name: gcr.io/cloud-builders/docker
  id: üèóÔ∏è Build Container Image
  args:
    - build
    - '-t'
    - '$_AR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME/$_IMAGE:$COMMIT_SHA'
    - .

# Push Container Image to Artifact Registry
- name: gcr.io/cloud-builders/docker
  id: üèóÔ∏è Push Container Image
  args:
    - push
    - '$_AR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME/$_IMAGE:$COMMIT_SHA'

# Get Image SHA from Artifact Registry
## Different format to `gcloud` builder example
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  id: "üîê Get Image Digest"
  entrypoint: /bin/bash
  args: 
    - -c
    - |
      gcloud artifacts docker images describe \
      $_AR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME/$_IMAGE:$COMMIT_SHA \
      --format 'value(image_summary.digest)' > /workspace/image-sha.txt

# Genereate SBOM
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  id: üîê Create a Software Bill of Materials (SBOM)
  allowFailure: true
  entrypoint: /bin/bash
  args:
    - -c
    - |
      gcloud artifacts sbom export --uri ${_AR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}/${_IMAGE}@$(cat /workspace/image-sha.txt)
    # - '$_AR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME/$_IMAGE'

# Create a Cloud Deploy Candidate
- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  id: Create a Cloud Deploy Candidate
  entrypoint: /bin/bash
  args:
    - -c
    - |
      gcloud deploy releases create coffee-${SHORT_SHA} --region ${_DEPLOY_REGION} --delivery-pipeline ${_DEPLOY_PIPELINE} \
      --annotations commitID=${REVISION_ID} \
      --images app=${_AR_HOSTNAME}/${PROJECT_ID}/${_SERVICE_NAME}/${_IMAGE}@$(cat /workspace/image-sha.txt)


images:
- '$_AR_HOSTNAME/$PROJECT_ID/$_SERVICE_NAME/$_IMAGE:$COMMIT_SHA'


options:
  # logging: CLOUD_LOGGING_ONLY
  requestedVerifyOption: VERIFIED
  dynamicSubstitutions: true
